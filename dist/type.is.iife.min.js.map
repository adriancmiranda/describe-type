{"version":3,"file":"type.is.iife.min.js","sources":["../lib/is/numeric.js","../lib/is/uint.js","../lib/is/primitive.js","../lib/is/buffer.js","../lib/is/json.js"],"sourcesContent":["module.exports = function isNumeric(value) {\n\treturn !isNaN(parseFloat(value)) && isFinite(value);\n};\n","const isInt = require('./int');\n\nmodule.exports = function isUint(value) {\n\treturn isInt(value) && value >= 0;\n};\n","module.exports = function isPrimitive(value) {\n\treturn typeof value === 'function' || value !== Object(value);\n};\n","const constructorOf = require('../constructor-of');\n\nmodule.exports = function isBuffer(value) {\n\ttry {\n\t\treturn constructorOf(value) === Buffer;\n\t} catch (err) {\n\t\treturn false;\n\t}\n};\n","const constructorOf = require('../constructor-of');\n\nconst jsonStart = /^\\[|^\\{(?!\\{)/;\nconst jsonEnds = {\n\t'[': /\\]$/,\n\t'{': /\\}$/,\n};\n\nmodule.exports = function isJson(value) {\n\tif (constructorOf(value) === String) {\n\t\tconst start = value.match(jsonStart);\n\t\treturn !!(start && jsonEnds[start[0]].test(value));\n\t}\n\treturn false;\n};\n"],"names":[],"mappings":";;;;;;;;;;u5CAAiB,CAAA,4ECEA,CAAA,+CCFA,CAAA,oECEA,CAAA,qFCMA,CAAA"}