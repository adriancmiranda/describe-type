/*!
 * 
 * ~~~~ describe-type v0.2.3
 * 
 * @moment Thursday, July 13, 2017 10:10 PM
 * @commit a4e17f6980d8c76df26bfabf836ac98c9b5b2db3
 * @homepage https://github.com/adriancmiranda/describe-type
 * @author Adrian C. Miranda */
define((function(){"use strict";function n(n,t){return new RegExp("("+g(n,!0)+")").test(a(t))}var t=function(n){return void 0===n||null===n?n:Object(n).constructor||Object},r=function(n){return t(n)===Array||!!n&&"object"==typeof n&&"number"==typeof n.length&&(0===n.length||n.length>0&&n.length-1 in n)},e=Object.prototype.toString,u=/^.*function\s([^\s]*|[^(]*)\([^\x00]+/m,o=/\s+/g,i={};i.string=function(n,t){return n&&n.constructor&&t?n.constructor.name&&"Object"!==n.constructor.name?n.constructor.name:n.constructor.toString().replace(u,"$1").replace(o,""):e.call(n).slice(8,-1)},i.int=function(n){return n},i.uint=function(n){return n},i.bool=function(n){return n};var c=i,{string:f}=c,a=function(n){var t=f(n,!0);return n===1/0||void 0===n||null===n||"Number"===t&&isNaN(n)?String(n):"Object"===t&&r(n)?"Arguments":t},s=function(n){var t=a(n);return"Function"===t&&Object(n).name||t},l=/^[^a-zA-Z_$]|[^\w|$]|[^\w$]$/g,p=function(n,t){var r=a(n);return"Object"===r||void 0===n||null===n?r:Object(n).name||(t&&"String"===r?n.replace(l,"_"):s(n))},g=(function(n,t){return t={exports:{}},n(t,t.exports),t.exports})((function(n){n.exports=function(r,e){var u=0;if(t(r)===Array&&r.length>0){for(;u<r.length;)r[u]=n.exports(r[u],e),u+=1;return r.join("|")}return p(r,e)}})),m=function(n){try{return t(n)===Buffer}catch(n){return!1}};(n.not=function(t,r){return!n(t,r)}).buffer=function(n){return!m(n)},n.not.arrayLike=function(n){return!r(n)},n.numeric=function(n){return!isNaN(parseFloat(n))&&isFinite(n)},n.not.numeric=function(t){return!n.numeric(t)},n.int=function(n){return parseFloat(n,10)===parseInt(n,10)},n.not.int=function(t){return!n.int(t)},n.uint=function(t){return n.int(t)&&t>=0},n.not.uint=function(t){return!n.uint(t)},n.primitive=function(n){return n!==Object(n)},n.not.primitive=function(t){return!n.primitive(t)};const b=/^\[|^\{(?!\{)/,j={"[":/\]$/,"{":/\}$/};return n.json=function(t){if(n(String,t)){const n=t.match(b);return!(!n||!j[n[0]].test(t))}return!1},n.not.json=function(t){return!n.json(t)},n.buffer=m,n.arrayLike=r,n.a=n.an=n,n.not.a=n.not.an=n.not,n}));
